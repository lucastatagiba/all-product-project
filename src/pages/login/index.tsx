import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { Button, Flex, Input, Text, useToast } from '@chakra-ui/react';
import { colors } from 'src/styles/theme';
import { IAuthState } from 'src/utils/storage';
import { useUserContext } from 'src/context';
import { apiWithAuth } from 'src/services';
import Head from 'next/head';
import { useIsAuthenticated } from 'src/hooks';

type InputValue = {
  email: string;
  password: string;
};

const Login = () => {
  const { handleLogin } = useUserContext();
  const [inputValue, setInputValue] = useState({} as InputValue);
  const toast = useToast();
  const router = useRouter();
  const isAuthenticated = useIsAuthenticated();

  useEffect(() => {
    if (isAuthenticated) router.push('/');
  }, [isAuthenticated, router]);

  const submitLogin = async () => {
    try {
      const { data } = await apiWithAuth.post<IAuthState>('/auth/login', {
        email: inputValue.email,
        password: inputValue.password,
      });

      handleLogin(data);
    } catch (error: any) {
      toast({
        description: 'Email ou senha inv√°lidos',
        status: 'error',
        duration: 4000,
        position: 'top-right',
        containerStyle: { color: 'white' },
        isClosable: true,
      });
    }
  };

  if (isAuthenticated) return null;

  return (
    <Flex
      flexDirection='column'
      alignItems='center'
      w={300}
      h={400}
      bg={colors.gray[800]}
      margin='100px auto'
      color={colors.white['pure']}
      gap={5}
      borderRadius={5}
    >
      <Head>
        <title>All product project</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/shoppingcart_80945.png' />
      </Head>
      <Text fontWeight='700' fontSize={30} mt={10}>
        Login
      </Text>

      <Input
        w='90%'
        value={inputValue.email}
        mt={10}
        placeholder='email'
        name='email'
        type='email'
        onChange={(e) => {
          setInputValue((old) => ({ ...old, email: e.target.value }));
        }}
      />
      <Input
        w='90%'
        value={inputValue.password}
        placeholder='password'
        name='password'
        type='password'
        onChange={(e) => {
          setInputValue((old) => ({ ...old, password: e.target.value }));
        }}
      />
      <Button onClick={submitLogin} mt={10} colorScheme='blackAlpha'>
        Login
      </Button>
    </Flex>
  );
};

export default Login;
